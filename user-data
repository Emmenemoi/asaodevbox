#cloud-config
bootcmd:
    - mkdir /asao-user-data
    - mount /dev/disk/by-partlabel/asao-user-data /asao-user-data || true
autoinstall:
# merge user-data don't work
#    early-commands:
#      - sed '$d' -i /autoinstall.yaml
#      - if [ -e /asao-user-data/extra-user-data ]; then sed '/^#/d' /asao-user-data/extra-user-data >> /autoinstall.yaml; fi
#      - echo ... >> /autoinstall.yaml
    network:
        network:
            version: 2
            ethernets:
              enp1s0:
                dhcp4: yes
#              enp2s0:
#                addresses:
#                  - 192.168.122.200/24
#                gateway4: 192.168.122.1
#                nameservers:
#                    search: [mydomain, otherdomain]
#                    addresses: [8.8.8.8, 1.1.1.1]
#            wifis:
#              wlo1:
#                dhcp4: yes
#                dhcp4: no
#                dhcp6: no
#                addresses: [192.168.0.21/24]
#                gateway4: 192.168.0.1
#                nameservers:
#                  addresses: [192.168.0.1, 8.8.8.8]
#                access-points:
#                  "network_ssid_name":
#                    password: "S3kr1t"
    version: 1
    locale: en_US
    keyboard:
        layout: fr
    repo_upgrade: none
    refresh-installer:
        update: no
    apt:
        primary:
            - arches: [default]
              uri: http://archive.ubuntu.com/ubuntu
    storage:
        grub:
            reorder_uefi: false
        swap:
            size: 0
        config:
            - id: sda
              type: disk
              ptable: gpt
              name: main_disk
              preserve: false
              wipe: superblock
            - id: sda1
              type: partition
              size: 512M
              device: sda
              flag: boot
              grub_device: true
              preserve: false
              number: 1 
            - id: sda2
              type: partition
              size: 512M
              device: sda
              grub_device: false
              flag: linux
              preserve: false
              number: 2
            - id: sda3
              type: partition
              size: -1
              device: sda
              grub_device: false
              flag: linux
              preserve: false
              number: 3
            - id: sda3_crypt
              type: dm_crypt
              dm_name: sda3_crypt
              volume: sda3
              key: asao
              preserve: false
            - id: volgroup1
              name: ubuntuvg
              type: lvm_volgroup
              preserve: false
              devices: [ sda3_crypt ]
            - id: lvmpart1
              name: ubuntu_root
              type: lvm_partition
              volgroup: volgroup1
              size: 100%
              preserve: false
            - id: sda1_efi
              type: format
              fstype: fat32
              volume: sda1
              preserve: false
            - id: sda2_boot
              type: format
              fstype: ext2
              volume: sda2
              preserve: false
            - id: root_fs
              name: storage
              type: format
              fstype: ext4
              volume: lvmpart1
              preserve: false
            - id: sda1_mount
              type: mount
              path: /boot/efi
              device: sda1_efi
            - id: sda2_mount
              type: mount
              path: /boot
              device: sda2_boot
            - id: lv1_mount
              type: mount
              path: /
              device: root_fs
    identity:
        hostname: asaoDevBox
        username: asao
        password: $1$ihVyWOJb$B6DQiuVxIFuJ.0PBED337.
    ssh:
        install-server: yes
        allow-pw: no
    packages:
#        - ubuntu-desktop-minimal
        - git
        - beep
        - wpasupplicant
    user-data:
        disable_root: false
    power_state:
        delay: '+30'
        mode: reboot
        message: 'Bye Bye'
        timeout: 10
        condition: True
    late-commands:
        - cp /target/etc/udev/rules.d/main_disk.rules /etc/udev/rules.d/ && udevadm trigger
        - cp /tmp/etc/init.d/asaobox_init /target/usr/local/sbin/asaobox_init
        - cp /tmp/etc/systemd/system/asaobox_init.service /target/etc/systemd/system/asaobox_init.service
#        - cp -rn /tmp/asao-user-data/* /asao-user-data/
        - mkdir -p /target/home/asao/.ssh/
        - chmod 0700 /target/home/asao/.ssh
        - if [ -f /asao-user-data/id_rsa ]; then cp /asao-user-data/id_rsa /target/home/asao/.ssh/id_rsa; chmod 600 /target/home/asao/.ssh/id_rsa; fi
        - cp /asao-user-data/id_rsa.pub /target/home/asao/.ssh/id_rsa.pub
        - cat /asao-user-data/id_rsa.pub >> /target/home/asao/.ssh/authorized_keys
        - if [ -f /asao-user-data/post-install.sh ]; then cp /asao-user-data/post-install.sh /target/home/asao/post-install.sh; fi
        - chown -R 1000:1000 /target/home/asao
        - tr -dc _A-Za-z0-9 < /dev/urandom | head -c 128 > /asao-user-data/keyfile
        - echo -n asao | cryptsetup -v --key-file - luksChangeKey /dev/disk/by-dname/main_disk-part3 /asao-user-data/keyfile
        - echo "sda3_crypt UUID=$(blkid -s UUID -o value /dev/disk/by-dname/main_disk-part3) /dev/disk/by-partlabel/asao-user-data:keyfile luks,keyscript=/lib/cryptsetup/scripts/passdev" > /target/etc/crypttab
        - echo "PARTLABEL=asao-user-data /asao-user-data auto noauto,user,defaults 0 0" >> /target/etc/fstab
        - curtin in-target --target=/target -- update-initramfs -u
#        - curtin in-target --target=/target -- bash /etc/init.d/asaobox_init
        - curtin in-target --target=/target -- ln -s /etc/systemd/system/asaobox_init.service /etc/systemd/system/multi-user.target.wants/asaobox_init.service
        - echo 'asao ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/asao
        - sed -ie 's/GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX="splash pci=noaer"/' /target/etc/default/grub
        - curtin in-target --target /target update-grub
write_files:
#- path: /tmp/asao-user-data/ssh_config
#  permissions: '0400'
#  owner: 1000:1000
#  content: |
#      Host bitbucket.org
#            IdentityFile    ~/.ssh/id_rsa
- path: /tmp/etc/init.d/asaobox_init
  permissions: '0755'
  content: |
    #!/bin/bash
    FLAG="/var/log/asaobox_init.log"

    [ ! -d /asao-user-data ] && mkdir /asao-user-data
    sudo mount /asao-user-data/

    if [ -f /asao-user-data/reset ]; then
      dd if=/dev/zero of=/dev/disk/by-dname/main_disk bs=1M count=100
      rm -f /asao-user-data/reset
      beep -l 1000 -r 3
      reboot
    else
      if [ ! -f $FLAG ]; then
          #Put here your initialization sentences
          echo "This is the first boot"
          beep -l 1000
          # if AnydeskPassword is set, run:
          if [ -f /asao-user-data/anydesk.conf ]; then
            source /asao-user-data/anydesk.conf
            if [ -z "${ANYDESK_PASSWORD}" or -z "${ANYDESK_LICENSE}" ]; then
              echo "ANYDESK_PASSWORD or ANYDESK_LICENSE is not defined" >&2
            else
              wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | apt-key add -
              echo "deb http://deb.anydesk.com/ all main" > /etc/apt/sources.list.d/anydesk-stable.list
              apt update
              apt install -qy anydesk ubuntu-desktop-minimal
              echo "${ANYDESK_PASSWORD}" | anydesk --set-password
              echo "${ANYDESK_LICENSE}" | anydesk --register-license
              systemctl restart anydesk
              systemctl enable anydesk
            fi
          fi

          # Install and configure microk8s
          snap install microk8s --classic --channel=1.14/stable
          microk8s.status --wait-ready
          echo | microk8s.enable dashboard dns registry istio
          #microk8s.config > /asao-user-data/kube-config.cfg
          usermod -a -G microk8s asao

          # Run post-install script if exist
          if [ -f /home/asao/post-install.sh ]; then
            chmod a+rx /home/asao/post-install.sh
            /home/asao/post-install.sh
          fi

          touch $FLAG
          beep -r 5 -l 100
          reboot
      else
          echo "Do nothing, or remove $FLAG file"
          beep -r 1 -l 100
      fi
      if [ -f /asao-user-data/reset_k8s ]; then
        microk8s.reset --destroy-storage
        rm -f /asao-user-data/reset_k8s
        microk8s.status --wait-ready
        echo | microk8s.enable dashboard dns registry istio
      fi

      microk8s.status --wait-ready
      microk8s.config > /asao-user-data/kube-config.cfg
    fi
    sudo umount /asao-user-data/
- path: /tmp/etc/systemd/system/asaobox_init.service
  permission: '0644'
  content: |
    [Unit]
    Description=AsaoBox init
    After=network.target snapd.seeded.service

    [Service]
    ExecStart=/usr/local/sbin/asaobox_init
    Type=oneshot
    RemainAfterExit=yes

    [Install]
    WantedBy=multi-user.target